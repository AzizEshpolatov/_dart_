import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}


import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}


import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}


import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}


import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}


import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}


import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}

import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}
import 'dart:io';
import 'dart:isolate';

/// -------------------- Dart dasturlash tili isolate -----------------------///
/// dart dasturlash tilida isolate bu parallel hisoblash amalga oshirish uchun
/// alohida bajariladigan mustaqil ishchi jarayon hisoblanadi dartda isolate
/// ozining xotira maydoniga ega bolgan obyektlar yigindisidir. Ular mutlaqo
/// mustaqil ishlaydi bir biriga aloqasi bolmagan xolda va bir biri bilan
/// xabarlar orqali muloqat qiladi.
/// Har bir isolate o'z ishchi jarayoniga ega bo'lib, asosiy ilova oqimidan
/// (main thread) ajratilgan holda ishlaydi. Har bir isolate o'zining xotirasida
/// ishlaydi va boshqa izolyatsiyalarning xotirasiga to'g'ridan-to'g'ri
/// kira olmaydi. Izolyatsiyalar bir-biri bilan ma'lumot almashish uchun
/// SendPort va ReceivePort orqali xabar yuboradi. (pastroqda toliq yozaman)
///
/// isolate ishlatilishi mumkin bolgan xolatlar quyidagilar
/// * Juda katta hajmdagi JSON maʼlumotlarni tahlil qilish va dekodlash.
/// * Fotosuratlar, audio va video fayllarni qayta ishlash.
/// * Audio va video fayllarni formatini oʻzgartirish.
/// * Katta roʻyxatlar yoki fayl tizimlarida murakkab qidiruv va filtrlash.
/// * Maʼlumotlar bazasi bilan muloqot kabi kirish-chiqish ishlarini bajarish.
/// * Koʻp miqdordagi tarmoq soʻrovlarini boshqarish.
///
/// Isolate.spawn orqali isolate yasash.
/// Isolate.spawn yordamida siz yangi isolate yaratasiz va unda biror funksiyani
/// ishga tushirasiz. Bu funksiya odatda uzoq davom etadigan vazifalarni asosiy
/// isolate-dan ajratib bajarish uchun ishlatiladi.
/// malumot almashish uchun sendPort va ReceivePort ishlatiladi va bu asosiy
/// oqimdan mustaqil ishlaydi
/// SendPort va ReceivePort  bu dart-da isolate ortasida xabar almashish
/// vositalari hisoblanadi.
/// * ReceivePort bu xabarlarni qabul qilish uchun ishlatiladi.
/// qabul qilingan habarni qayta ishlash uchun listen methodidan foydalanadi
/// * SendPort Bu xabarlarni boshqa izolyatsiyaga yuborish uchun ishlatiladi.
/// Har bir ReceivePort o‘zining **SendPort**iga ega.

/// example--katta hajmli file oqimoqchi bolsak isolate yasash tartibi

void main() async {
  ReceivePort mainReceivePort = ReceivePort();
  await Isolate.spawn(readFileWithIsolate, mainReceivePort.sendPort);
  SendPort? workerSendPort;
  mainReceivePort.listen((message) {
    if (message is SendPort) {
      workerSendPort = message;
      workerSendPort?.send('path/to/your/large_file.txt');
    } else {
      print('Javob: $message');
    }
  });
}

void readFileWithIsolate(SendPort mainSendPort) {
  ReceivePort workerReceivePort = ReceivePort();
  mainSendPort.send(workerReceivePort.sendPort);
  workerReceivePort.listen((filePath) async {
    if (filePath is String) {
      try {
        final file = File(filePath);
        String content = await file.readAsString();
        mainSendPort.send('Fayl o‘qildi. Hajmi: ${content.length} belgi.');
      } catch (e) {
        mainSendPort.send('Xatolik yuz berdi: $e');
      }
    } else {
      mainSendPort.send('Noto‘g‘ri formatdagi file path.');
    }
  });
}


